package vacationDiaryPart2;

import java.util.Scanner;

public class VacationDiaryPart2 {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        StringBuilder table = new StringBuilder();
        String headers = "==========================================================\n" + 
        "Date        City           Country        Days    Mode\n" + 
        		"==========  =============  ==============  ======  ======\n";
        table.append(headers); // Append headers at the beginning of the table
        
        while (true) {
            System.out.print("Enter date visit started (mmddyyyy) or 'End' to terminate the loop: ");
            String dateInput = scanner.nextLine();

            if ("End".equalsIgnoreCase(dateInput)) {
                break;
            }

            String formattedDate = validateAndFormatDate(dateInput);
            if (formattedDate == null) continue; // Re-prompt if validation fails

            System.out.print("Enter the city visited: ");
            String city = validateAndFormatCityCountry(scanner.nextLine(), true);

            System.out.print("Enter the country visited: ");
            String country = validateAndFormatCityCountry(scanner.nextLine(), false);

            System.out.print("Enter the number of days: ");
            int days = validateAndFormatDays(scanner.nextLine());
            if (days == -1) continue; // Re-prompt if validation fails

            System.out.print("Enter the mode of travel (car, plane, ship, train, bus): ");
            String modeOfTravel = validateModeOfTravel(scanner.nextLine());
            if (modeOfTravel == null) continue; // Re-prompt if validation fails

            table.append(String.format("%-10s  %-13s  %-14s  %-6d  %-6s\n", 
                        formattedDate, city, country, days, modeOfTravel)); 
        }

        System.out.println("==========================================================\n" + 
        "======================Vacation Diary======================\n" + 
        table.toString() + 
        "=========================================================\n");
        scanner.close();
    }

    private static String validateAndFormatDate(String date) {
        if (!date.matches("\\d{8}")) {
            System.out.println("Invalid date format. Please enter as mmddyyyy.");
            return null;
        }
        return date.substring(0, 2) + "/" + date.substring(2, 4) + "/" + date.substring(4);
    }

    private static int validateAndFormatDays(String daysInput) {
        try {
            int days = Integer.parseInt(daysInput);
            if (days < 1 || days > 30) {
                System.out.println("Number of days must be between 1 and 30.");
                return -1;
            }
            return days;
        } catch (NumberFormatException e) {
            System.out.println("Invalid input for days. Please enter a numeric value.");
            return -1;
        }
    }

    private static String validateAndFormatCityCountry(String input, boolean isCity) {
        if (input.length() > 13) {
            return input.substring(0, 13);
        } else {
            return String.format("%-13s", input);
        }
    }

    private static String validateModeOfTravel(String mode) {
        String[] validModes = {"car", "plane", "ship", "train", "bus"};
        for (String validMode : validModes) {
            if (validMode.equalsIgnoreCase(mode)) {
                return validMode;
            }
        }
        System.out.println("Invalid mode of travel. Please enter one of the following: car, plane, ship, train, bus.");
        return null;
    }
}
